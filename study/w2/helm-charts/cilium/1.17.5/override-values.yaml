# helm upgrade cilium cilium/cilium --namespace kube-system --version 1.17.6 --values override-values.yaml

# -- (string) Kubernetes service host - use "auto" for automatic lookup from the cluster-info ConfigMap
k8sServiceHost: "192.168.10.100"

# @schema
# type: [string, integer]
# @schema
# -- (string) Kubernetes service port
k8sServicePort: "6443"

# -- Configure the kube-proxy replacement in Cilium BPF datapath
# Valid options are "true" or "false".
# ref: https://docs.cilium.io/en/stable/network/kubernetes/kubeproxy-free/
kubeProxyReplacement: "true"

# -- Enable native-routing mode or tunneling mode.
# Possible values:
#   - ""
#   - native
#   - tunnel
# @default -- `"tunnel"`
routingMode: "native"

# @schema
# type: [boolean, string]
# @schema
# -- Enable installation of PodCIDR routes between worker
# nodes if worker nodes share a common L2 network segment.
autoDirectNodeRoutes: true

ipam:
  # -- Configure IP Address Management mode.
  # ref: https://docs.cilium.io/en/stable/network/concepts/ipam/
  mode: "cluster-pool"

  operator:
    # @schema
    # type: [array, string]
    # @schema
    # -- IPv4 CIDR list range to delegate to individual nodes for IPAM.
    clusterPoolIPv4PodCIDRList: ["172.20.0.0/16"]

# -- (string) Allows to explicitly specify the IPv4 CIDR for native routing.
# When specified, Cilium assumes networking for this CIDR is preconfigured and
# hands traffic destined for that range to the Linux network stack without
# applying any SNAT.
# Generally speaking, specifying a native routing CIDR implies that Cilium can
# depend on the underlying networking stack to route packets to their
# destination. To offer a concrete example, if Cilium is configured to use
# direct routing and the Kubernetes CIDR is included in the native routing CIDR,
# the user must configure the routes to reach pods, either manually or by
# setting the auto-direct-node-routes flag.
ipv4NativeRoutingCIDR: "172.20.0.0/16"

endpointRoutes:
  # @schema
  # type: [boolean, string]
  # @schema
  # -- Enable use of per endpoint routes instead of routing via
  # the cilium_host interface.
  enabled: true

# -- Install Iptables rules to skip netfilter connection tracking on all pod
# traffic. This option is only effective when Cilium is running in direct
# routing and full KPR mode. Moreover, this option cannot be enabled when Cilium
# is running in a managed Kubernetes environment or in a chained CNI setup.
installNoConntrackIptablesRules: true

bpf:
  # -- (bool) Enable native IP masquerade support in eBPF
  masquerade: true

ipv6:
  # -- Enable IPv6 support.
  enabled: false

hubble:
  enabled: true
  relay:
    enabled: true
  ui:
    enabled: true
    service:
      type: NodePort
      nodePort: 31234
  metrics:
    enableOpenMetrics: true
    enabled:
      - dns
      - drop
      - tcp
      - flow
      - port-distribution
      - icmp
      - httpV2:exemplars=true;labelsContext=source_ip,source_namespace,source_workload,destination_ip,destination_namespace,destination_workload,traffic_direction
  export:
    static:
      enabled: false
      # filePath: /var/run/cilium/hubble/events.log
    dynamic:
      enabled: true
      config:
        enabled: true
        content:
          - name: monitoring
            filePath: /var/run/cilium/hubble/events-monitoring.log
            includeFilters:
              - source_pod: ["monitoring/"]
              - destination_pod: ["monitoring/"]
          # - name: monitoring_ns-to-vector_ns
          #   filePath: /var/run/cilium/hubble/events-system.log
          #   includeFilters:
          #     - source_pod: monitoring/
          #     - destination_pod: vector/

extraVolumes:
  - name: hubble-flowlogs-monitoring
    emptyDir: {}

extraVolumeMounts:
  - name: hubble-flowlogs-monitoring
    mountPath: /var/run/cilium/hubble/

extraContainers:
  - name: sidecar-flowlogs-monitoring
    image: busybox
    command:
      ["sh", "-c", "tail -F /var/run/cilium/hubble/events-monitoring.log"]
    volumeMounts:
      - name: hubble-flowlogs-monitoring
        mountPath: /var/run/cilium/hubble/

prometheus:
  enabled: true

operator:
  enabled: true
  prometheus:
    enabled: true
